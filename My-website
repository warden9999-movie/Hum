* { margin: 0; padding: 0; box-sizing: border-box; }
    body { font-family: Arial, sans-serif; background: #111; color: #fff; }

    .navbar {
      display: flex; justify-content: space-between; align-items: center;
      padding: 10px; background: #222;
    }

    .navbar img { height: 40px; }
    .nav-links { display: flex; align-items: center; gap: 10px; }
    .nav-links a { color: white; text-decoration: none; margin: 0 5px; }

    .search-bar {
      padding: 5px; border-radius: 5px; border: none;
    }

    .banner {
      height: 50vh;
      background-size: cover;
      display: flex;
      align-items: center;
      padding: 20px;
    }

    .banner h1 {
      background: rgba(0,0,0,0.7);
      padding: 10px;
    }

    .row {
      margin: 20px;
    }

    .row h2 {
      margin-bottom: 10px;
    }

    .list {
      display: flex;
      overflow-x: auto;
    }

    .list img {
      width: 150px;
      margin-right: 10px;
      cursor: pointer;
      border-radius: 5px;
      transition: transform 0.3s ease, filter 0.3s ease;
    }

    .list img:hover {
      transform: scale(1.05);
      filter: brightness(1.2);
      z-index: 2;
    }

    .modal {
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: rgba(0,0,0,0.8);
      display: none;
      justify-content: center;
      align-items: center;
      z-index: 10;
    }

    .modal-content {
      background: #222;
      padding: 20px;
      width: 100%;
      max-width: 800px;
      max-height: 90vh;
      overflow-y: auto;
      position: relative;
      text-align: center;
      border-radius: 10px;
    }

    .modal-body {
      display: flex;
      align-items: flex-start;
      gap: 20px;
      margin-bottom: 20px;
    }

    .modal-body img {
      width: 30%;
      border-radius: 5px;
    }

    .modal-text {
      flex: 1;
      text-align: left;
    }

    .modal img {
      width: 25%;
      border-radius: 5px;
    }

    .stars { color: gold; }
    .close {
      position: absolute;
      top: 10px; right: 20px;
      cursor: pointer;
      font-size: 24px;
    }

    .server-selector {
      margin: 15px 0;
      text-align: left;
    }


    .search-modal {
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: rgba(0, 0, 0, 0.9);
      display: none;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      z-index: 15;
    }

    .search-modal input {
      width: 300px;
      padding: 10px;
      border-radius: 5px;
      border: none;
      margin-bottom: 20px;
    }

    .search-modal .results {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 10px;
    }

    .search-modal img {
      width: 120px;
      border-radius: 5px;
      cursor: pointer;
    }

    .search-modal .close {
      position: absolute;
      top: 20px;
      right: 30px;
      font-size: 30px;
    }

/* MOBILE DISPLAY START */
@media (max-width: 768px) {
  .navbar {
    flex-direction: row;
    align-items: flex-start;
  }

  .nav-links {
    flex-direction: row;
    width: 100%;
    gap: 10px;
    margin-top: 10px;
  }

  .nav-links a, .search-bar {
    width: 100%;
  }

  .search-bar {
    margin-top: 10px;
  }

  .banner {
      height: 30vh;
  }
    
  .modal-body {
    align-items: center;
  }

  .modal-body img {
    width: 40%;
  }

  .modal-text {
    text-align: center;
  }

  .list {
    flex-wrap: nowrap;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }

  .list img {
    width: 120px;
  }

  .search-modal input {
    margin-top: 50px;
    width: 90%;
  }

  .search-modal .results {
    justify-content: center;
    grid-template-columns: repeat(auto-fill, minmax(45%, 1fr));
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    padding: 10px 0;
  }
}

@media (max-width: 480px) {
  .banner h1 {
    font-size: 20px;
    padding: 5px;
  }

  .row h2 {
    font-size: 18px;
  }

  .modal-content {
    width: 95%;
    padding: 15px;
  }

  .modal-body img {
    width: 40%;
  }

  .search-modal .close {
    font-size: 24px;
    top: 10px;
    right: 20px;
  }
}
/* MOBILE DISPLAY END */

.footer {
  background: #222;
  color: #ccc;
  padding: 20px;
  text-align: center;
  margin-top: 40px;
}

.footer-content {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.footer-links {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 15px;
}

.footer-links a {
  color: red;
  text-decoration: none;
  transition: color 0.3s;
}

.footer-links a:hover {
  color: #fff;
}

/* Responsive adjustments */
@media (max-width: 600px) {
  .footer-content {
    font-size: 14px;
  }

  .footer-links {
    flex-direction: row;
    gap: 8px;
  }
}
const API_KEY = 'a1e72fd93ed59f56e6332813b9f8dcae';
    const BASE_URL = 'https://api.themoviedb.org/3';
    const IMG_URL = 'https://image.tmdb.org/t/p/original';
    let currentItem;

    async function fetchTrending(type) {
      const res = await fetch(`${BASE_URL}/trending/${type}/week?api_key=${API_KEY}`);
      const data = await res.json();
      return data.results;
    }

    async function fetchTrendingAnime() {
  let allResults = [];

  // Fetch from multiple pages to get more anime (max 3 pages for demo)
  for (let page = 1; page <= 3; page++) {
    const res = await fetch(`${BASE_URL}/trending/tv/week?api_key=${API_KEY}&page=${page}`);
    const data = await res.json();
    const filtered = data.results.filter(item =>
      item.original_language === 'ja' && item.genre_ids.includes(16)
    );
    allResults = allResults.concat(filtered);
  }

  return allResults;
}


    function displayBanner(item) {
      document.getElementById('banner').style.backgroundImage = `url(${IMG_URL}${item.backdrop_path})`;
      document.getElementById('banner-title').textContent = item.title || item.name;
    }

    function displayList(items, containerId) {
      const container = document.getElementById(containerId);
      container.innerHTML = '';
      items.forEach(item => {
        const img = document.createElement('img');
        img.src = `${IMG_URL}${item.poster_path}`;
        img.alt = item.title || item.name;
        img.onclick = () => showDetails(item);
        container.appendChild(img);
      });
    }

    function showDetails(item) {
      currentItem = item;
      document.getElementById('modal-title').textContent = item.title || item.name;
      document.getElementById('modal-description').textContent = item.overview;
      document.getElementById('modal-image').src = `${IMG_URL}${item.poster_path}`;
      document.getElementById('modal-rating').innerHTML = 'â˜…'.repeat(Math.round(item.vote_average / 2));
      changeServer();
      document.getElementById('modal').style.display = 'flex';
    }

    function changeServer() {
      const server = document.getElementById('server').value;
      const type = currentItem.media_type === "movie" ? "movie" : "tv";
      let embedURL = "";

      if (server === "vidsrc.cc") {
        embedURL = `https://vidsrc.cc/v2/embed/${type}/${currentItem.id}`;
      } else if (server === "vidsrc.me") {
        embedURL = `https://vidsrc.net/embed/${type}/?tmdb=${currentItem.id}`;
      } else if (server === "player.videasy.net") {
        embedURL = `https://player.videasy.net/${type}/${currentItem.id}`;
      }

      document.getElementById('modal-video').src = embedURL;
    }

    function closeModal() {
      document.getElementById('modal').style.display = 'none';
      document.getElementById('modal-video').src = '';
    }

    function openSearchModal() {
      document.getElementById('search-modal').style.display = 'flex';
      document.getElementById('search-input').focus();
    }

    function closeSearchModal() {
      document.getElementById('search-modal').style.display = 'none';
      document.getElementById('search-results').innerHTML = '';
    }

    async function searchTMDB() {
      const query = document.getElementById('search-input').value;
      if (!query.trim()) {
        document.getElementById('search-results').innerHTML = '';
        return;
      }

      const res = await fetch(`${BASE_URL}/search/multi?api_key=${API_KEY}&query=${query}`);
      const data = await res.json();

      const container = document.getElementById('search-results');
      container.innerHTML = '';
      data.results.forEach(item => {
        if (!item.poster_path) return;
        const img = document.createElement('img');
        img.src = `${IMG_URL}${item.poster_path}`;
        img.alt = item.title || item.name;
        img.onclick = () => {
          closeSearchModal();
          showDetails(item);
        };
        container.appendChild(img);
      });
    }

    async function init() {
      const movies = await fetchTrending('movie');
      const tvShows = await fetchTrending('tv');
      const anime = await fetchTrendingAnime();

      displayBanner(movies[Math.floor(Math.random() * movies.length)]);
      displayList(movies, 'movies-list');
      displayList(tvShows, 'tvshows-list');
      displayList(anime, 'anime-list');
    }

    init();
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>My Website</title>
  <link rel="stylesheet" href="css/home.css">
  <link rel="preload" href="css/home.css" as="style">
  <link rel="preload" href="js/home.js" as="script">
  <link rel="manifest" href="manifest.json">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
  <script defer src="js/home.js"></script>
</head>

<body>
  <div class="navbar">
    <img src="logo.png" alt="LOGO HERE" />
    <div class="nav-links">
      <a href="index.html">Home</a>
      <input type="text" class="search-bar" placeholder="Search..." onfocus="openSearchModal()" />
    </div>
  </div>

  <div class="banner" id="banner">
    <h1 id="banner-title"></h1>
  </div>

  <div class="row">
    <h2>Trending Movies</h2>
    <div class="list" id="movies-list"></div>
  </div>

  <div class="row">
    <h2>Trending TV Shows</h2>
    <div class="list" id="tvshows-list"></div>
  </div>

  <div class="row">
    <h2>Trending Anime</h2>
    <div class="list" id="anime-list"></div>
  </div>

  <div class="modal" id="modal">
    <div class="modal-content">
      <span class="close" onclick="closeModal()" style="color: red;">&times;</span>
      <div class="modal-body">
  <img id="modal-image" src="" alt="" />
  <div class="modal-text">
    <h2 id="modal-title"></h2>
    <div class="stars" id="modal-rating"></div>
    <p id="modal-description"></p>
  </div>
</div>
      
      <div class="server-selector">
        <label for="server">Change Server:</label>
        <select id="server" onchange="changeServer()">
          <option value="vidsrc.cc">Vidsrc.cc</option>
          <option value="vidsrc.me">Vidsrc.me</option>
          <option value="player.videasy.net">Player.Videasy.net</option>
        </select>
      </div>
      <iframe id="modal-video" width="100%" height="315" frameborder="0" allowfullscreen></iframe>
    </div>
  </div>

  <div class="search-modal" id="search-modal">
    <span class="close" onclick="closeSearchModal()" style="color: red;">&times;</span>
    <input type="text" id="search-input" placeholder="Search for a movie or show..." oninput="searchTMDB()" />
    <div class="results" id="search-results"></div>
  </div>

<footer class="footer">
  <div class="footer-content">
    <p>&copy; 2025 My Website. All rights reserved.</p>
    <div class="footer-links">
      <a href="#">Disclaimer</a>
      <a href="#">About Us</a>
      <a href="#">Contact Us</a>
    </div>
  </div>
</footer>

  
</body>
